За да откријам според која feature прво се дели дрвото и натака | тука бирам кој чекор на делба ме интересират
first_split_feature = clf.feature_names_in_[clf.tree_.feature[0]]
print(f"The first feature split is: {first_split_feature}")

За да сменам податоци да бидат во нумерички облик
le = LabelEncoder() 
le.fit(x['sex'])
le.classes_
new_sex = le.transform(x['sex'])
x['sex'] = new_sex

Колку состојби да се проверат? MINIMAX algorithm
  General Approach:

    1.Count the total number of positions (for each square on the board).
    2.Account for the constraints (such as the number of pawns, which pieces belong to which player, etc.).
    3.Account for game-specific rules (such as legal moves and win conditions) that reduce the number of valid states.

Ако сакам да тргнам  некоја колона, пример 4та колона од вкупно 10:
  df_x = pd.concat([df.iloc[:, :3], df.iloc[:, 4:]], axis=1)

Прашања:
  Алфа-Бета Поткастрување е метода која го минимизира бројот на состојби кои се испитуваат при употреба на минимакс алгоритамот. Со оваа метода алгоритамот се извршува во пократко време, но повторно го дава точниот резултат. Алфа-бета поткаструвањето ги елиминира гранките кои со сигурност нема да бидат крајното решение.
      -Се користи во игри со цел копмјутерот побрзо да го пресмета следниот чекор што играчот треба да го направи.
      -оптимизирачка техника
  -Ентропија претставува мерка за несигурност и неред во датасетот. Датасет со висока/голема ентропија има примероци од различни класи, а датасет со нулта ентропија има примероци кои припаѓаат на само една класа.
  -Ентропијата ги насочува дрвата за одлучување да ја одберат особината која најдобро ја дели датата на подмножества со најмала несигурност.
  -Тој алгоритам при секоја итерација ја одбира (локалната) оптималната поделба која носи најголема информациска придобивка, но не може да се врати чекор назад по разгранување, што може да доведе до не оптимално дрво во глобална смисла.
  -Gini index е побрз за пресметување бидејќи не користи логаритми поради што почесто се користи. При користење на gini index и ентропија, перформансите се многу слични и поради тоа gini index се избира поради брзината и ефикасноста, едноставност.
+20alg=>overfitting & high bias

In case of tsv dataset: TSV file - tab separated value -> CSV - comma separated value
import pandas as pd

# Read the TSV file
df = pd.read_csv('your_data.tsv', delimiter='\t')

# Save the DataFrame to a CSV file
df.to_csv('your_data.csv', index=False)  # 'index=False' prevents writing row numbers to the CSV
